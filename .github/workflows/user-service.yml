name: Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    name: Hi
    runs-on: ubuntu-latest
    steps:
      - name: hello
        run: echo "helloworld"

# jobs:
#   deploy:
#     name: Deployment
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
        
#       - name: Get the version
#         id: get-tag
#         run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
        
#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
        
#       - name: Build and push
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           file: Dockerfile
#           target: release-debian
#           push: true
#           tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.workflow }}:${{steps.get-tag.outputs.tag}}
#           cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.workflow }}:buildcache
#           cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.workflow }}:buildcache,mode=max

#   vulnerability-scan:
#     name: Vulnerability Scan with 
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v3

#     - name: Create SBOM
#       uses: anchore/scan-action@v3
#       with:
#         path: "."
#         format: syft-json
#         artifact-name: syft-sbom.json
#         output-file: "syft-sbom.json"
    
#     - name: Print SBOM
#       run: cat "syft-sbom.json"
    
#     - name: Scan SBOM
#       id: scan
#       uses: anchore/scan-action@v3
#       with:
#         sbom: "syft-sbom.json"
    
#     - name: View Report
#       if: always()
#       run: cat "${{steps.scan.outputs.sarif}}"
  
#   owasp-check:
#     runs-on: ubuntu-latest
#     name: OWASP check
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Build project with Maven
#         run: mvn clean install

#       - name: Depcheck
#         uses: dependency-check/Dependency-Check_Action@main
#         id: Depcheck
#         with:
#           project: 'project'
#           path: '.'
#           format: 'HTML'
#           out: 'reports' # this is the default, no need to specify unless you wish to override it
#           args: >
#             --failOnCVSS 7
#             --enableRetired
#       - name: Upload Test results
#         uses: actions/upload-artifact@v3
#         with:
#           name: Depcheck report
#           path: ${{github.workspace}}/reports
