name: Deploy

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
    secrets:
      username:
        required: true
      password:
        required: true

jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest
    outputs:
      get-image-name: ${{ steps.get-image-name.outputs.image-name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Get the version
        id: get-tag
        run: echo "tag=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set image name
        id: get-image-name
        run: echo "image-name=${{ secrets.username }}/${{ inputs.service-name }}:${{ needs.deploy.outputs.get-tag }}" >> $GITHUB_OUTPUT
                
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          target: release-debian
          push: true
          tags: ${{ steps.get-image-name.outputs.image-name }}
          cache-from: type=registry,ref=${{ inputs.service-name }}/${{ inputs.service-name }}:buildcache
          cache-to: type=registry,ref=${{ inputs.service-name }}/${{ inputs.service-name }}:buildcache,mode=max

  vulnerability-scan:
    name: Scan
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Scanning
        env: 
          IMAGE_NAME: ${{needs.deploy.outputs.get-image-name}}
        uses: anchore/scan-action@v3
        with:
          image: $IMAGE_NAME

