name: Deploy

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
    secrets:
      username:
        required: true
      password:
        required: true

jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Get the version
        id: get-tag
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          target: release-debian
          push: true
          tags: ${{ secrets.username }}/${{ inputs.service-name }}:${{steps.get-tag.outputs.tag}}
          cache-from: type=registry,ref=${{ inputs.service-name }}/${{ inputs.service-name }}:buildcache
          cache-to: type=registry,ref=${{ inputs.service-name }}/${{ inputs.service-name }}:buildcache,mode=max

  vulnerability-scan:
    name: Vulnerability Scan with 
    runs-on: ubuntu-latest
    steps:
    - name: Replace hyphens with underscore  
      run: |
          service_name="${{ inputs.service-name }}"
          modified_service_name="${service_name//-/_}"
          
    - name: Checkout
      uses: actions/checkout@v3

    - name: Create SBOM
      uses: anchore/scan-action@v3
      with:
        path: "./$modified-service-name"
        format: syft-json
        artifact-name: syft-sbom.json
        output-file: "syft-sbom.json"
    
    - name: Print SBOM
      run: |
        cat "./$modified-service-name"
        cat "syft-sbom.json"
    
    - name: Scan SBOM
      id: scan
      uses: anchore/scan-action@v3
      with:
        sbom: "syft-sbom.json"
    
    - name: View Report
      if: always()
      run: cat "${{steps.scan.outputs.sarif}}"
       
    - name: Upload Test results
      uses: actions/upload-artifact@v3
      with:
        name: Depcheck report
        path: ${{github.workspace}}/reports
