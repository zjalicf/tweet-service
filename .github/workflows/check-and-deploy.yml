name: Check and deploy

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:          
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.17.0'

      - name: Fuzz test
        uses: jidicula/go-fuzz-action@v1.2.0
        with:
          fuzz-time: 10s
          packages: './tests'

      - name: Docker for newman
        run: |
          docker run -v $(pwd)/api-tests:/etc/newman -t postman/newman:latest run "tests.json" --reporters="cli" -x
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build local container
        uses: docker/build-push-action@v2
        with:
          tags: localbuild/testimage:latest
          push: false
          load: true
          
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
          
      - name: Create SBOM
        uses: anchore/sbom-action@v0
        with:
          format: spdx-json
          output-file: "sbom.spdx.json"

  deploy:
    name: Deployment
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Get the version
        id: get-tag
        run: echo "tag=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          target: release-debian
          push: false
          load: true
          tags: $DOCKER_HUB_USERNAME/tweet-service:test
  
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          target: release-debian
          push: true
          tags: $DOCKER_HUB_USERNAME/tweet-service:${{ env.tag }}
          cache-from: type=registry,ref=$DOCKER_HUB_USERNAME/tweet-service:buildcache
          cache-to: type=registry,ref=$DOCKER_HUB_USERNAME/tweet-service:buildcache,mode=max
