name: Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.17.0'

      # - name: Fuzz test
      #   uses: jidicula/go-fuzz-action@v1.2.0
      #   with:
      #     fuzz-time: 30s
      #     packages: './...'

      - name: Docker for newman
        run: |
          docker run -v $(pwd)/api-tests:/etc/newman -t postman/newman:latest run "tests.json" --reporters="cli" -x
      
      - name: Install Syft and Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM with Syft
        run: |
          docker build -t test-image:latest .
          docker image save test-image:latest -o test-image.tar
          syft packages dir:/test-image.tar -o json > sbom.json

      - name: Scan SBOM with Grype
        run: grype sbom:sbom.json
      

  # deploy:
  #   name: Deployment
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
        
  #     - name: Get the version
  #       id: get-tag
  #       run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
        
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Build
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         target: release-debian
  #         push: false
  #         load: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/tweet-service:test

  #     - name: Scan image
  #       uses: anchore/scan-action@v3
  #       with:
  #         image: ${{ secrets.DOCKER_HUB_USERNAME }}/tweet-service:test
  #         fail-build: false
  
  #     - name: Build and push
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         target: release-debian
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/tweet-service:${{steps.get-tag.outputs.tag}}
  #         cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/tweet-service:buildcache
  #         cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/tweet-service:buildcache,mode=max